// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using  GamologyGapp.Models;
//
//    var juegosapp = Juegosapp.FromJson(jsonString);

namespace GamologyGapp.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Juegosapp
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("nombre")]
        public string Nombre { get; set; }

        [JsonProperty("genero")]
        public string Genero { get; set; }

        [JsonProperty("desarrollador")]
        public string Desarrollador { get; set; }

        [JsonProperty("distribuidor")]
        public string Distribuidor { get; set; }

        [JsonProperty("fechalanzamiento")]
        public string Fechalanzamiento { get; set; }

        [JsonProperty("plataforma")]
        public string Plataforma { get; set; }
    }

    public partial class Juegosapp
    {
        public static List<Juegosapp> FromJson(string json) => JsonConvert.DeserializeObject<List<Juegosapp>>(json, GamologyGapp.Models.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Juegosapp> self) => JsonConvert.SerializeObject(self, GamologyGapp.Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
